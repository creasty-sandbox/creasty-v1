
//--- Responsive / Retina
//----------------------------------------------------------------------------------------------
@mixin retina {
	@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-resolution: 2dppx) {
		@content;
	}
}
@mixin respond($max: 0, $min: 0) {
	@if $max != 0 and $min == 0 {
		@media only screen and (max-width: $max) {
			@content;
		}
	}
	@else if $max == 0{
		@media only screen and (min-width: $min) {
			@content;
		}
	}
	@else {
		@media only screen and (min-width: $min), only screen and (max-width: $max) {
			@content;
		}
	}
}
@mixin respond-retina($max: 0, $min: 0) {
	@if $max != 0 and $min == 0 {
		@media only screen and (max-width: $max) and (-webkit-min-device-pixel-ratio: 2), only screen and (max-width: $max) and (min-resolution: 2dppx) {
			@content;
		}
	}
	@else if $max == 0{
		@media only screen and (min-width: $min) and (-webkit-min-device-pixel-ratio: 2), only screen and (min-width: $min) and (min-resolution: 2dppx) {
			@content;
		}
	}
	@else {
		@media only screen and (min-width: $min) and (-webkit-min-device-pixel-ratio: 2), only screen and (max-width: $max) and (-webkit-min-device-pixel-ratio: 2), only screen and (min-width: $min) and (min-resolution: 2dppx), only screen and (max-width: $max) and (min-resolution: 2dppx) {
			@content;
		}
	}
}


//--- CSS PIE
//----------------------------------------------------------------------------------------------
@mixin pie {
	behavior: $pie-behavior;
}


//--- Grid
//----------------------------------------------------------------------------------------------
@function grid-span($n) {
	@return $n * $grid-width + ($n - 1) * $grid-gutter;
}
@function grid-span-px($n, $width: $grid-pixel-default) {
	@return ceil((grid-span($n) / 100%) * $width);
}


//--- Button
//----------------------------------------------------------------------------------------------
@mixin btn-coloring($text, $base, $mode: up, $plus: 0) {
	$fallback: 0;
	$top: 0;
	$bottom: 0;
	$border: 0;

	@if $mode == up {
		$border:   darken($base, 15% + $plus);
		$fallback: darken($base, 1%);
		$top:      $base;
		$bottom:   darken($base, 2%);
	}
	@else if $mode == hover {
		$border:   darken($base, 20% + $plus);
		$fallback: lighten($base, 1.2%);
		$top:      lighten($base, 1%);
		$bottom:   darken($base, .5%);
	}
	@else {
		$border:   darken($base, 20% + $plus);
		$fallback: lighten($base, 1.2%);
		$top:      darken($base, .5%);
		$bottom:   lighten($base, 1%);
	}

	color: $text;
	border-color: $border;

	background: $fallback;
	@include background($fallback linear-gradient($top, $bottom));
	@include pie;
}

@mixin normal-btn($text, $base) {
	@include btn-coloring($text, $base);

	&:hover,
	&.hover {
		@include btn-coloring($text, $base, hover);
	}

	&:active,
	&.active {
		@include btn-coloring($text, $base, active);
	}
}


//--- Arrow
//----------------------------------------------------------------------------------------------
@mixin arrow($direction, $size, $color, $left: 0, $top: 0) {
	@if $direction == top {
		$direction: bottom;
	}
	@else if $direction == right {
		$direction: left;
	}
	@else if $direction == bottom {
		$direction: top;
	}
	@else if $direction == left {
		$direction: right;
	}

	display: block;
	position: absolute;
	left: -$size + $left;
	top: $top;
	width: 0;
	height: 0;
	border: $size solid transparent;
	border-bottom-color: $color;
}


/*=== Fluid Image
==============================================================================================*/
%fluid-image {
	max-width: 100%;
	height: auto !important;
	width: auto\9; // ie8
	-ms-interpolation-mode: bicubic;
}


/*=== Floats
==============================================================================================*/
.clear-after {
	zoom: 1;

	&:after {
		content: "";
		display: block;
		clear: both;
	}
}

.clear { clear: both; }
.clear-left { clear: left; }

br.clear,
div.clear,
br.clear-left,
div.clear-left { display: block; font: 1px/1px monospace; }

.float-left { float: left; }
.float-right { float: right; }


/*=== Utilities
==============================================================================================*/
.hide { display: none !important; }
.no-padding { padding: 0 !important; }
.no-margin { margin: 0 !important; }
div.center { margin: 0 auto; }

.text-replace {
	text-indent: 150%;
	white-space: nowrap;
	overflow: hidden;
}


/*=== Compact - float child elements, clear floats
==============================================================================================*/
.compact {
	@extend .clear-after;

	> * {
		float: left;
	}

	> p,
	> span {
		margin-right: 1ex;
		margin-bottom: 0;
		padding: 0;
	}

	> ul,
	> ol {
		list-style: none;
	}
}
dl.compact > dd { margin-left: 0; }


/*=== Menu
==============================================================================================*/
.menu {
	position: relative;
	display: block;
	margin: 0 0 1em;
	padding: 0;
	line-height: 0;
	list-style: none;

	* { line-height: 1.25; }
	li,
	dd,
	dt { margin: 0; padding: 0; }
}

